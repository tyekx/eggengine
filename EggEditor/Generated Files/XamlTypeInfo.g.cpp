//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#include "pch.h"
#include "XamlTypeInfo.g.h"

#include "App.xaml.h"
#include "MainPage.xaml.h"
#include "UC_AddComponent.xaml.h"
#include "UC_Asset.xaml.h"
#include "UC_AssetBrowser.xaml.h"
#include "UC_AssetEditor.xaml.h"
#include "UC_BreadCrumb.xaml.h"
#include "UC_GameObject.xaml.h"
#include "UC_MeshComponent.xaml.h"
#include "UC_ProjectFolder.xaml.h"
#include "UC_Properties.xaml.h"
#include "UC_Scene.xaml.h"
#include "UC_ScriptComponent.xaml.h"
#include "UC_TransformComponent.xaml.h"
#include "XamlBindingInfo.g.hpp"
#include "App.g.hpp"
#include "MainPage.g.hpp"
#include "UC_AddComponent.g.hpp"
#include "UC_Asset.g.hpp"
#include "UC_AssetBrowser.g.hpp"
#include "UC_AssetEditor.g.hpp"
#include "UC_BreadCrumb.g.hpp"
#include "UC_GameObject.g.hpp"
#include "UC_MeshComponent.g.hpp"
#include "UC_ProjectFolder.g.hpp"
#include "UC_Properties.g.hpp"
#include "UC_Scene.g.hpp"
#include "UC_ScriptComponent.g.hpp"
#include "UC_TransformComponent.g.hpp"

template<typename T>
::Platform::Object^ ActivateType()
{
    return ref new T;
}

template<typename TInstance, typename TItem>
void CollectionAdd(::Platform::Object^ instance, ::Platform::Object^ item)
{
    safe_cast<TInstance^>(instance)->Append((TItem)item);
}

template<typename TInstance, typename TKey, typename TItem>
void DictionaryAdd(::Platform::Object^ instance, ::Platform::Object^ key, ::Platform::Object^ item)
{
    safe_cast<TInstance^>(instance)->Insert((TKey)key, (TItem)item);
}

template<typename T>
::Platform::Object^ FromStringConverter(::XamlTypeInfo::InfoProvider::XamlUserType^ userType, ::Platform::String^ input)
{
    return ref new ::Platform::Box<T>((T)userType->CreateEnumUIntFromString(input));
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_SubWindowIndex(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->SubWindowIndex);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_MainWindowIndex(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->MainWindowIndex);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_GradientStop(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->GradientStop);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_GradientStart(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->GradientStart);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_EditState(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->EditState);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_Signature(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->Signature);
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_OverlayText(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->OverlayText;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_AssetName(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->AssetName;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_TypedDataContext(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->TypedDataContext;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_ParentFolder(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->ParentFolder;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_BreadCrumbText(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->BreadCrumbText;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_BreadCrumbRef(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->BreadCrumbRef;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Name(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Name;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_FolderName(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->FolderName;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Children(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Children;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Component(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Component;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_GameObjects(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->GameObjects;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_SubWindowIndex(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->SubWindowIndex = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_MainWindowIndex(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->MainWindowIndex = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_GradientStop(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->GradientStop = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_GradientStart(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->GradientStart = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_EditState(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->EditState = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_Signature(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Signature = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_OverlayText(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->OverlayText = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_AssetName(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->AssetName = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_ParentFolder(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->ParentFolder = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_BreadCrumbText(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->BreadCrumbText = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_Name(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Name = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_FolderName(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->FolderName = safe_cast<TValue^>(value);
}

enum TypeInfo_Flags
{
    TypeInfo_Flags_None                 = 0x00,
    TypeInfo_Flags_IsLocalType          = 0x01,
    TypeInfo_Flags_IsSystemType         = 0x02,
    TypeInfo_Flags_IsReturnTypeStub     = 0x04,
    TypeInfo_Flags_IsBindable           = 0x08,
    TypeInfo_Flags_IsMarkupExtension    = 0x10, 
};

struct TypeInfo
{
    PCWSTR  typeName;
    PCWSTR contentPropertyName;
    ::Platform::Object^ (*activator)();
    void (*collectionAdd)(::Platform::Object^, ::Platform::Object^);
    void (*dictionaryAdd)(::Platform::Object^, ::Platform::Object^, ::Platform::Object^);
    ::Platform::Object^ (*fromStringConverter)(::XamlTypeInfo::InfoProvider::XamlUserType^, ::Platform::String^);
    int     baseTypeIndex;
    int     firstMemberIndex;
    int     firstEnumValueIndex;
    int     createFromStringIndex;
    ::Windows::UI::Xaml::Interop::TypeKind kindofType;
    unsigned int flags;
    int boxedTypeIndex;
};

const TypeInfo TypeInfos[] = 
{
    //   0
    L"Int32", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    -1,
    //   1
    L"Object", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    -1,
    //   2
    L"String", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    -1,
    //   3
    L"UInt64", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    -1,
    //   4
    L"Windows.UI.Color", L"",
    nullptr, nullptr, nullptr, nullptr,
    5, // System.ValueType
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsReturnTypeStub | TypeInfo_Flags_None,
    -1,
    //   5
    L"System.ValueType", L"",
    nullptr, nullptr, nullptr, nullptr,
    1, // Object
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_None,
    -1,
    //   6
    L"EggEditor.UC_Scene", L"",
    &ActivateType<::EggEditor::UC_Scene>, nullptr, nullptr, nullptr,
    30, // Windows.UI.Xaml.Controls.UserControl
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //   7
    L"EggEditor.MainPage", L"",
    &ActivateType<::EggEditor::MainPage>, nullptr, nullptr, nullptr,
    23, // Windows.UI.Xaml.Controls.Page
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //   8
    L"EggEditor.UC_Asset", L"",
    nullptr, nullptr, nullptr, nullptr,
    30, // Windows.UI.Xaml.Controls.UserControl
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //   9
    L"EggEditor.UC_Properties", L"",
    &ActivateType<::EggEditor::UC_Properties>, nullptr, nullptr, nullptr,
    30, // Windows.UI.Xaml.Controls.UserControl
    2, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  10
    L"EggEditor.UC_BreadCrumb", L"",
    nullptr, nullptr, nullptr, nullptr,
    30, // Windows.UI.Xaml.Controls.UserControl
    2, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  11
    L"EggEditor.UC_GameObject", L"",
    nullptr, nullptr, nullptr, nullptr,
    30, // Windows.UI.Xaml.Controls.UserControl
    4, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  12
    L"EggEditor.UC_AssetEditor", L"",
    &ActivateType<::EggEditor::UC_AssetEditor>, nullptr, nullptr, nullptr,
    30, // Windows.UI.Xaml.Controls.UserControl
    4, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  13
    L"EggEditor.UC_AssetBrowser", L"",
    &ActivateType<::EggEditor::UC_AssetBrowser>, nullptr, nullptr, nullptr,
    30, // Windows.UI.Xaml.Controls.UserControl
    4, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  14
    L"EggEditor.UC_AddComponent", L"",
    &ActivateType<::EggEditor::UC_AddComponent>, nullptr, nullptr, nullptr,
    30, // Windows.UI.Xaml.Controls.UserControl
    4, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  15
    L"Windows.UI.Xaml.UIElement", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    4, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    -1,
    //  16
    L"EggEditor.AssetDataContext", L"",
    &ActivateType<::EggEditor::AssetDataContext>, nullptr, nullptr, nullptr,
    1, // Object
    4, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_IsBindable | TypeInfo_Flags_None,
    -1,
    //  17
    L"EggEditor.UC_ProjectFolder", L"",
    nullptr, nullptr, nullptr, nullptr,
    30, // Windows.UI.Xaml.Controls.UserControl
    9, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  18
    L"EggEditor.UC_MeshComponent", L"",
    &ActivateType<::EggEditor::UC_MeshComponent>, nullptr, nullptr, nullptr,
    30, // Windows.UI.Xaml.Controls.UserControl
    12, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  19
    L"EggEditor.SceneDataContext", L"",
    &ActivateType<::EggEditor::SceneDataContext>, nullptr, nullptr, nullptr,
    1, // Object
    12, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_IsBindable | TypeInfo_Flags_None,
    -1,
    //  20
    L"EggEditor.IntEqualConverter", L"",
    &ActivateType<::EggEditor::IntEqualConverter>, nullptr, nullptr, nullptr,
    1, // Object
    13, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  21
    L"EggEditor.UC_ScriptComponent", L"",
    &ActivateType<::EggEditor::UC_ScriptComponent>, nullptr, nullptr, nullptr,
    30, // Windows.UI.Xaml.Controls.UserControl
    13, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  22
    L"EggEditor.MainPageDataContext", L"",
    &ActivateType<::EggEditor::MainPageDataContext>, nullptr, nullptr, nullptr,
    1, // Object
    13, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_IsBindable | TypeInfo_Flags_None,
    -1,
    //  23
    L"Windows.UI.Xaml.Controls.Page", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    15, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    -1,
    //  24
    L"EggEditor.IntNotEqualConverter", L"",
    &ActivateType<::EggEditor::IntNotEqualConverter>, nullptr, nullptr, nullptr,
    1, // Object
    15, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  25
    L"EggEditor.BreadCrumbDataContext", L"",
    &ActivateType<::EggEditor::BreadCrumbDataContext>, nullptr, nullptr, nullptr,
    1, // Object
    15, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_IsBindable | TypeInfo_Flags_None,
    -1,
    //  26
    L"EggEditor.GameObjectDataContext", L"",
    &ActivateType<::EggEditor::GameObjectDataContext>, nullptr, nullptr, nullptr,
    1, // Object
    16, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_IsBindable | TypeInfo_Flags_None,
    -1,
    //  27
    L"EggEditor.UC_TransformComponent", L"",
    &ActivateType<::EggEditor::UC_TransformComponent>, nullptr, nullptr, nullptr,
    30, // Windows.UI.Xaml.Controls.UserControl
    19, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  28
    L"EggEditor.VM_TransformComponent", L"",
    nullptr, nullptr, nullptr, nullptr,
    1, // Object
    20, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_IsReturnTypeStub | TypeInfo_Flags_None,
    -1,
    //  29
    L"EggEditor.ProjectFolderDataContext", L"",
    &ActivateType<::EggEditor::ProjectFolderDataContext>, nullptr, nullptr, nullptr,
    1, // Object
    20, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_IsBindable | TypeInfo_Flags_None,
    -1,
    //  30
    L"Windows.UI.Xaml.Controls.UserControl", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    22, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    -1,
    //  31
    L"EggEditor.SignatureToVisibilityConverter", L"",
    &ActivateType<::EggEditor::SignatureToVisibilityConverter>, nullptr, nullptr, nullptr,
    1, // Object
    22, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  32
    L"EggEditor.SignatureBitsToVisibilityConverter", L"",
    &ActivateType<::EggEditor::SignatureBitsToVisibilityConverter>, nullptr, nullptr, nullptr,
    1, // Object
    22, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  33
    L"EggEditor.NegatedSignatureToVisibilityConverter", L"",
    &ActivateType<::EggEditor::NegatedSignatureToVisibilityConverter>, nullptr, nullptr, nullptr,
    1, // Object
    22, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    -1,
    //  34
    L"Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.UIElement>", L"",
    nullptr, &CollectionAdd<::Windows::Foundation::Collections::IVector<::Windows::UI::Xaml::UIElement^>, ::Windows::UI::Xaml::UIElement^>, nullptr, nullptr,
    -1,
    22, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsReturnTypeStub | TypeInfo_Flags_None,
    -1,
    //  35
    L"Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.UIElement>", L"",
    nullptr, &CollectionAdd<::Windows::Foundation::Collections::IObservableVector<::Windows::UI::Xaml::UIElement^>, ::Windows::UI::Xaml::UIElement^>, nullptr, nullptr,
    -1,
    22, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsReturnTypeStub | TypeInfo_Flags_None,
    -1,
    //  Last type here is for padding
    L"", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1, 
    22, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_None,
};

const UINT TypeInfoLookup[] = { 
      0,   //   0
      0,   //   1
      0,   //   2
      0,   //   3
      0,   //   4
      0,   //   5
      1,   //   6
      4,   //   7
      4,   //   8
      4,   //   9
      4,   //  10
      4,   //  11
      4,   //  12
      4,   //  13
      4,   //  14
      4,   //  15
      4,   //  16
      6,   //  17
      6,   //  18
      9,   //  19
      9,   //  20
      9,   //  21
      9,   //  22
      9,   //  23
     12,   //  24
     13,   //  25
     16,   //  26
     20,   //  27
     21,   //  28
     22,   //  29
     24,   //  30
     25,   //  31
     29,   //  32
     29,   //  33
     29,   //  34
     30,   //  35
     30,   //  36
     31,   //  37
     31,   //  38
     31,   //  39
     31,   //  40
     32,   //  41
     32,   //  42
     32,   //  43
     32,   //  44
     33,   //  45
     33,   //  46
     33,   //  47
     34,   //  48
     34,   //  49
     34,   //  50
     34,   //  51
     34,   //  52
     34,   //  53
     34,   //  54
     34,   //  55
     34,   //  56
     34,   //  57
     34,   //  58
     34,   //  59
     34,   //  60
     34,   //  61
     34,   //  62
     34,   //  63
     34,   //  64
     34,   //  65
     34,   //  66
     34,   //  67
     35,   //  68
     35,   //  69
     35,   //  70
     35,   //  71
     35,   //  72
     35,   //  73
     35,   //  74
     35,   //  75
     35,   //  76
     35,   //  77
     36,   //  78
};

const TypeInfo* GetTypeInfo(::Platform::String^ typeName)
{
    auto typeNameLength = typeName->Length();
    if (typeNameLength < _countof(TypeInfoLookup) - 1)
    {
        for (UINT i = TypeInfoLookup[typeNameLength]; i < TypeInfoLookup[typeNameLength+1]; i++)
        {
            if (typeName == ::Platform::StringReference(TypeInfos[i].typeName))
            {
                return &TypeInfos[i];
            }
        }
    }
    return nullptr;
}

struct MemberInfo 
{
    PCWSTR shortName;
    ::Platform::Object^ (*getter)(::Platform::Object^);
    void (*setter)(::Platform::Object^, ::Platform::Object^);
    int typeIndex;
    int targetTypeIndex;
    bool isReadOnly;
    bool isDependencyProperty;
    bool isAttachable;
};

const MemberInfo MemberInfos[] = 
{
    //   0 - EggEditor.UC_Asset.TypedDataContext
    L"TypedDataContext",
    &GetReferenceTypeMember_TypedDataContext<::EggEditor::UC_Asset>,
    nullptr,
    16, // EggEditor.AssetDataContext
    -1,
    true,  false, false,
    //   1 - EggEditor.UC_Asset.ParentFolder
    L"ParentFolder",
    &GetReferenceTypeMember_ParentFolder<::EggEditor::UC_Asset>,
    &SetReferenceTypeMember_ParentFolder<::EggEditor::UC_Asset, ::EggEditor::UC_ProjectFolder>,
    17, // EggEditor.UC_ProjectFolder
    -1,
    false, false, false,
    //   2 - EggEditor.UC_BreadCrumb.TypedDataContext
    L"TypedDataContext",
    &GetReferenceTypeMember_TypedDataContext<::EggEditor::UC_BreadCrumb>,
    nullptr,
    25, // EggEditor.BreadCrumbDataContext
    -1,
    true,  false, false,
    //   3 - EggEditor.UC_BreadCrumb.BreadCrumbRef
    L"BreadCrumbRef",
    &GetReferenceTypeMember_BreadCrumbRef<::EggEditor::UC_BreadCrumb>,
    nullptr,
    1, // Object
    -1,
    true,  false, false,
    //   4 - EggEditor.AssetDataContext.GradientStop
    L"GradientStop",
    &GetValueTypeMember_GradientStop<::EggEditor::AssetDataContext, ::Windows::UI::Color>,
    &SetValueTypeMember_GradientStop<::EggEditor::AssetDataContext, ::Windows::UI::Color>,
    4, // Windows.UI.Color
    -1,
    false, false, false,
    //   5 - EggEditor.AssetDataContext.GradientStart
    L"GradientStart",
    &GetValueTypeMember_GradientStart<::EggEditor::AssetDataContext, ::Windows::UI::Color>,
    &SetValueTypeMember_GradientStart<::EggEditor::AssetDataContext, ::Windows::UI::Color>,
    4, // Windows.UI.Color
    -1,
    false, false, false,
    //   6 - EggEditor.AssetDataContext.OverlayText
    L"OverlayText",
    &GetReferenceTypeMember_OverlayText<::EggEditor::AssetDataContext>,
    &SetReferenceTypeMember_OverlayText<::EggEditor::AssetDataContext, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //   7 - EggEditor.AssetDataContext.AssetName
    L"AssetName",
    &GetReferenceTypeMember_AssetName<::EggEditor::AssetDataContext>,
    &SetReferenceTypeMember_AssetName<::EggEditor::AssetDataContext, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //   8 - EggEditor.AssetDataContext.EditState
    L"EditState",
    &GetValueTypeMember_EditState<::EggEditor::AssetDataContext, ::default::int32>,
    &SetValueTypeMember_EditState<::EggEditor::AssetDataContext, ::default::int32>,
    0, // Int32
    -1,
    false, false, false,
    //   9 - EggEditor.UC_ProjectFolder.TypedDataContext
    L"TypedDataContext",
    &GetReferenceTypeMember_TypedDataContext<::EggEditor::UC_ProjectFolder>,
    nullptr,
    29, // EggEditor.ProjectFolderDataContext
    -1,
    true,  false, false,
    //  10 - EggEditor.UC_ProjectFolder.ParentFolder
    L"ParentFolder",
    &GetReferenceTypeMember_ParentFolder<::EggEditor::UC_ProjectFolder>,
    &SetReferenceTypeMember_ParentFolder<::EggEditor::UC_ProjectFolder, ::EggEditor::UC_ProjectFolder>,
    17, // EggEditor.UC_ProjectFolder
    -1,
    false, false, false,
    //  11 - EggEditor.UC_ProjectFolder.Children
    L"Children",
    &GetReferenceTypeMember_Children<::EggEditor::UC_ProjectFolder>,
    nullptr,
    35, // Windows.Foundation.Collections.IObservableVector`1<Windows.UI.Xaml.UIElement>
    -1,
    true,  false, false,
    //  12 - EggEditor.SceneDataContext.GameObjects
    L"GameObjects",
    &GetReferenceTypeMember_GameObjects<::EggEditor::SceneDataContext>,
    nullptr,
    34, // Windows.Foundation.Collections.IVector`1<Windows.UI.Xaml.UIElement>
    -1,
    true,  false, false,
    //  13 - EggEditor.MainPageDataContext.SubWindowIndex
    L"SubWindowIndex",
    &GetValueTypeMember_SubWindowIndex<::EggEditor::MainPageDataContext, ::default::int32>,
    &SetValueTypeMember_SubWindowIndex<::EggEditor::MainPageDataContext, ::default::int32>,
    0, // Int32
    -1,
    false, false, false,
    //  14 - EggEditor.MainPageDataContext.MainWindowIndex
    L"MainWindowIndex",
    &GetValueTypeMember_MainWindowIndex<::EggEditor::MainPageDataContext, ::default::int32>,
    &SetValueTypeMember_MainWindowIndex<::EggEditor::MainPageDataContext, ::default::int32>,
    0, // Int32
    -1,
    false, false, false,
    //  15 - EggEditor.BreadCrumbDataContext.BreadCrumbText
    L"BreadCrumbText",
    &GetReferenceTypeMember_BreadCrumbText<::EggEditor::BreadCrumbDataContext>,
    &SetReferenceTypeMember_BreadCrumbText<::EggEditor::BreadCrumbDataContext, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  16 - EggEditor.GameObjectDataContext.EditState
    L"EditState",
    &GetValueTypeMember_EditState<::EggEditor::GameObjectDataContext, ::default::int32>,
    &SetValueTypeMember_EditState<::EggEditor::GameObjectDataContext, ::default::int32>,
    0, // Int32
    -1,
    false, false, false,
    //  17 - EggEditor.GameObjectDataContext.Signature
    L"Signature",
    &GetValueTypeMember_Signature<::EggEditor::GameObjectDataContext, ::default::uint64>,
    &SetValueTypeMember_Signature<::EggEditor::GameObjectDataContext, ::default::uint64>,
    3, // UInt64
    -1,
    false, false, false,
    //  18 - EggEditor.GameObjectDataContext.Name
    L"Name",
    &GetReferenceTypeMember_Name<::EggEditor::GameObjectDataContext>,
    &SetReferenceTypeMember_Name<::EggEditor::GameObjectDataContext, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  19 - EggEditor.UC_TransformComponent.Component
    L"Component",
    &GetReferenceTypeMember_Component<::EggEditor::UC_TransformComponent>,
    nullptr,
    28, // EggEditor.VM_TransformComponent
    -1,
    true,  false, false,
    //  20 - EggEditor.ProjectFolderDataContext.EditState
    L"EditState",
    &GetValueTypeMember_EditState<::EggEditor::ProjectFolderDataContext, ::default::int32>,
    &SetValueTypeMember_EditState<::EggEditor::ProjectFolderDataContext, ::default::int32>,
    0, // Int32
    -1,
    false, false, false,
    //  21 - EggEditor.ProjectFolderDataContext.FolderName
    L"FolderName",
    &GetReferenceTypeMember_FolderName<::EggEditor::ProjectFolderDataContext>,
    &SetReferenceTypeMember_FolderName<::EggEditor::ProjectFolderDataContext, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
};

PCWSTR GetShortName(PCWSTR longName)
{
    PCWSTR separator = wcsrchr(longName, '.');
    return separator != nullptr ? separator + 1: longName;
}


const MemberInfo* GetMemberInfo(::Platform::String^ longMemberName)
{
    auto lastDotIndex = longMemberName->Length();
    while (true)
    {
        if (longMemberName->Data()[lastDotIndex] == '.')
        {
            const TypeInfo* pTypeInfo = GetTypeInfo(ref new ::Platform::String(longMemberName->Data(), lastDotIndex));
            const TypeInfo* pNextTypeInfo = pTypeInfo + 1;
            if (pTypeInfo)
            {
                PCWSTR shortMemberName = GetShortName(longMemberName->Data());
                for (int i = pTypeInfo->firstMemberIndex; i < pNextTypeInfo->firstMemberIndex; i++)
                {
                    if (wcscmp(shortMemberName, MemberInfos[i].shortName) == 0)
                    {
                        return &MemberInfos[i];
                    }
                }
            }
            break;
        }
        if (lastDotIndex == 0)
        {
            break;
        }
        lastDotIndex--;
    }
    return nullptr;
}

#pragma warning(push)
#pragma warning(disable: 4691)
::Platform::Collections::Vector<::Windows::UI::Xaml::Markup::IXamlMetadataProvider^>^ ::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::OtherProviders::get()
{
    if(_otherProviders == nullptr)
    {
        auto otherProviders = ref new ::Platform::Collections::Vector<::Windows::UI::Xaml::Markup::IXamlMetadataProvider^>();
        _otherProviders = otherProviders;
    }
    return _otherProviders;
}
#pragma warning(pop)

::Windows::UI::Xaml::Markup::IXamlType^ ::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::CreateXamlType(::Platform::String^ typeName)
{
    const TypeInfo* pTypeInfo = GetTypeInfo(typeName);
    const TypeInfo* pNextTypeInfo = pTypeInfo + 1;
    if (pTypeInfo == nullptr || pNextTypeInfo == nullptr)
    {
        return nullptr;
    }
    else if (pTypeInfo->flags & TypeInfo_Flags_IsSystemType)
    {
        return ref new ::XamlTypeInfo::InfoProvider::XamlSystemBaseType(typeName);
    }
    else
    {
        ::XamlTypeInfo::InfoProvider::XamlUserType^ userType = ref new ::XamlTypeInfo::InfoProvider::XamlUserType(
            this, 
            ::Platform::StringReference(pTypeInfo->typeName), 
            this->GetXamlTypeByName(::Platform::StringReference(pTypeInfo->baseTypeIndex >= 0 ? TypeInfos[pTypeInfo->baseTypeIndex].typeName : L"")));
        userType->KindOfType = pTypeInfo->kindofType;
        userType->Activator = pTypeInfo->activator;
        userType->CollectionAdd = pTypeInfo->collectionAdd;
        userType->DictionaryAdd = pTypeInfo->dictionaryAdd;
        userType->FromStringConverter = pTypeInfo->fromStringConverter;
        userType->ContentPropertyName = ::Platform::StringReference(pTypeInfo->contentPropertyName);
        userType->IsLocalType = pTypeInfo->flags & TypeInfo_Flags_IsLocalType;
        userType->IsReturnTypeStub = pTypeInfo->flags & TypeInfo_Flags_IsReturnTypeStub;
        userType->IsBindable = pTypeInfo->flags & TypeInfo_Flags_IsBindable;
        userType->IsMarkupExtension = pTypeInfo->flags & TypeInfo_Flags_IsMarkupExtension;
        userType->CreateFromStringMethod = nullptr;
        userType->SetBoxedType(this->GetXamlTypeByName(::Platform::StringReference(pTypeInfo->boxedTypeIndex >= 0 ? TypeInfos[pTypeInfo->boxedTypeIndex].typeName : L"")));
        int nextMemberIndex = pTypeInfo->firstMemberIndex;
        for (int i=pTypeInfo->firstMemberIndex; i < pNextTypeInfo->firstMemberIndex; i++)
        {
            userType->AddMemberName(::Platform::StringReference(MemberInfos[i].shortName));
            nextMemberIndex++;
        }
        return userType;
    }
}

::Windows::UI::Xaml::Markup::IXamlMember^ ::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::CreateXamlMember(::Platform::String^ longMemberName)
{
    ::XamlTypeInfo::InfoProvider::XamlMember^ xamlMember = nullptr;
    const MemberInfo* pMemberInfo = GetMemberInfo(longMemberName);
    if (pMemberInfo != nullptr)
    {
        xamlMember = ref new ::XamlTypeInfo::InfoProvider::XamlMember(
            this,
            ::Platform::StringReference(pMemberInfo->shortName),
            ::Platform::StringReference(TypeInfos[pMemberInfo->typeIndex].typeName));
        xamlMember->Getter = pMemberInfo->getter;
        xamlMember->Setter = pMemberInfo->setter;
        xamlMember->TargetTypeName = pMemberInfo->targetTypeIndex >= 0 ? ::Platform::StringReference(TypeInfos[pMemberInfo->targetTypeIndex].typeName) : L"";
        xamlMember->IsReadOnly = pMemberInfo->isReadOnly;
        xamlMember->IsDependencyProperty = pMemberInfo->isDependencyProperty;
        xamlMember->IsAttachable = pMemberInfo->isAttachable;
    }
    return xamlMember;
}

